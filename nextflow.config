
/*
========================================================================================
  Nextflow config file
========================================================================================
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
includeConfig 'conf/base.config'
params {

    // Boilerplate options
    outdir                     = './results'
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    
    // Max requirements
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'
} 

profiles {
    secure_lustre {
        process.executor = 'local'
        
        params {
            publish_dir_mode = "copy"
            exome_size = 48.225157
            all_samples = false
            one_per_patient = false
            independent = false
            alternative_transcripts = "assets/NOFILE"
        }

        docker {
        enabled = true
        runOptions = '-u $(id -u):$(id -g)'
        }

        singularity {
            enabled    = false
            autoMounts = false
        }
    }

    farm22 {
        process.executor = 'lsf'
        singularity.runOptions = "--bind /lustre"

        docker {
        enabled = false
        }
        singularity {
            enabled    = true
            autoMounts = true
            cacheDir = '/lustre/scratch125/casm/team113da/singularity_cache/dermatlas'
            registry = 'gitlab-registry.internal.sanger.ac.uk'
            username = System.getenv('SINGULARITY_DOCKER_USERNAME')
            password = System.getenv('SINGULARITY_DOCKER_PASSWORD')
            }
        executor {
            name = 'lsf'
            perJobMemLimit = true
            poolSize = 4
            submitRateLimit = '5 sec'
            killBatchSize = 50
        }
        params {
            publish_dir_mode = "copy"
            exome_size = 48.225157
            one_per_patient = false
            independent = false
            alternative_transcripts = "$baseDir/assets/NOFILE"
            }
        process {
          withName: FILTER_PASS_VARIANTS {
           module "bcftools-1.9/python-3.11.6"
        }
          withName: ADD_COMMON_ANNOTATIONS {
           module "bcftools-1.9/python-3.11.6"
        }
        }
    }
}



def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
tracedir = "pipeline_info"

report {
    enabled = true
    file    = "execution_report_${trace_timestamp}.html"
}


manifest {
    name            = 'dermatlas_mafqc'
    author          = 'Kim Wong, Jamie Billington'
    homePage        = 'https://gitlab.internal.sanger.ac.uk/DERMATLAS/analysis-methods/dermatlas_mafqc_nf'
    description     = 'Variant QC and MAF generation pipeline for Dermatlas'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.04.5'
    version         = '0.3.0'
    defaultBranch   = 'develop'
}

def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}